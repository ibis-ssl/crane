cmake_minimum_required(VERSION 3.8)
project(crane_gui)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# OpenGL_GL_PREFERENCE has not been set to "GLVND" or "LEGACY", so for
# compatibility with CMake 3.10 and below the legacy GL library will be used.
set(OpenGL_GL_PREFERENCE GLVND)

# find dependencies
find_package(ament_cmake_auto REQUIRED)
find_package(rclcpp_components REQUIRED)
ament_auto_find_build_dependencies()

# uncomment the following section in order to fill in
# further dependencies manually.
# find_package(<dependency> REQUIRED)

# Sources and headers
set(SOURCES
        src/crane_gui_node.cpp
)

set(HEADERS
        # include/crane_commander.hpp
)

# Create the executable
ament_auto_add_executable(${PROJECT_NAME}_node
  src/${PROJECT_NAME}_node.cpp
)

# rclcpp_components_register_nodes(${PROJECT_NAME}_component "crane::GuiComponent")

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

ament_package()
