name: build test

on:
  workflow_dispatch:
  pull_request:
  merge_group:

jobs:
  job:
    name: BuildAndRun
    runs-on: >-
      ${{
        (contains(github.event.pull_request.labels.*.name, 'SelfHostedRunner'))
          && fromJSON('[ "self-hosted"]')
          || fromJSON('[ "ubuntu-latest" ]')
      }}
    timeout-minutes: 30
    container: ghcr.io/ibis-ssl/crane:base
    env:
      DEBIAN_FRONTEND: noninteractive
    strategy:
      fail-fast: false
      matrix:
        rosdistro: [humble]
    steps:
      - name: suppress warnings
        run: |
          git config --global --add safe.directory '*'

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          path: ibis_ws/src/crane

      - name: Install dependencies
        run: |
          cd ibis_ws
          vcs import src < src/crane/dependency_${{ matrix.rosdistro }}.repos

      - name: Install other dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl docker-compose

      - name: Download logger for scenario test
        run: |
          curl -L https://github.com/RoboCup-SSL/ssl-go-tools/releases/download/v1.5.2/ssl-log-recorder_v1.5.2_linux_amd64 -o ssl-log-recorder
          chmod +x ssl-log-recorder

      - name: docker compose pull
        run: |
          docker-compose pull -f docker/docker-compose.yaml
        shell: bash

      - name: Resolve rosdep
        run: |
          cd ibis_ws
          rosdep update
          rosdep install -iy --from-paths src --rosdistro ${{ matrix.rosdistro }} --dependency-types=build --dependency-types=buildtool --dependency-types=test
        shell: bash

      - name: Setup Problem Matchers for GCC
        run: echo "::add-matcher::ibis_ws/src/crane/.github/matchers/gcc.json"

      - name: Get modified packages
        id: get-modified-packages
        uses: autowarefoundation/autoware-github-actions/get-modified-packages@v1

      - name: Build packages
        if: steps.get-modified-packages.outputs.modified-packages != ''
        run: |
          source /opt/ros/${{ matrix.rosdistro }}/setup.bash
          cd ibis_ws
          colcon build --symlink-install --packages-above-and-dependencies ${{ steps.get-modified-packages.outputs.modified-packages }} --cmake-args '-DCMAKE_BUILD_TYPE=Release'
        shell: bash

      - name: Colcon test
        if: steps.get-modified-packages.outputs.modified-packages != ''
        run: |
          source /opt/ros/${{ matrix.rosdistro }}/setup.bash
          source ibis_ws/install/setup.bash
          cd ibis_ws
          colcon test --packages-above-and-dependencies ${{ steps.get-modified-packages.outputs.modified-packages }}
        shell: bash

      - name: Setup Problem Matchers for clang-format
        if: steps.get-modified-packages.outputs.modified-packages != ''
        run: echo "::add-matcher::ibis_ws/src/crane/.github/matchers/clang-format.json"

      - name: Show test result
        if: steps.get-modified-packages.outputs.modified-packages != ''
        run: |
          source /opt/ros/${{ matrix.rosdistro }}/setup.bash
          cd ibis_ws
          colcon test-result --verbose
        shell: bash
