name: build test

on:
  workflow_dispatch:
  pull_request:
  merge_group:

jobs:
  job:
    name: BuildAndRun
    runs-on: >-
      ${{
        (contains(github.event.pull_request.labels.*.name, 'SelfHostedRunner'))
          && fromJSON('[ "self-hosted"]')
          || fromJSON('[ "ubuntu-latest" ]')
      }}
    timeout-minutes: 30
    container: ghcr.io/ibis-ssl/crane:base
    env:
      DEBIAN_FRONTEND: noninteractive
      GIT_DISCOVERY_ACROSS_FILESYSTEM: 1

    strategy:
      fail-fast: false
      matrix:
        rosdistro: [humble]
    steps:
      - name: suppress warnings
        run: |
          git config --global --add safe.directory '*'

      - name: Set PR fetch depth
        run: echo "PR_FETCH_DEPTH=$(( ${{ github.event.pull_request.commits }} + 1 ))" >> "${GITHUB_ENV}"

      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: ${{ env.PR_FETCH_DEPTH }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Problem Matchers for GCC
        run: echo "::add-matcher::.github/matchers/gcc.json"

      - name: Setup Problem Matchers for clang-format
        if: steps.get-modified-packages.outputs.modified-packages != ''
        run: echo "::add-matcher::.github/matchers/clang-format.json"

      - name: Get modified packages
        id: get-modified-packages
        uses: autowarefoundation/autoware-github-actions/get-modified-packages@v1

      - name: Build
        if: ${{ steps.get-modified-packages.outputs.modified-packages != '' }}
        uses: autowarefoundation/autoware-github-actions/colcon-build@v1
        with:
          rosdistro: ${{ matrix.rosdistro }}
          target-packages: ${{ steps.get-modified-packages.outputs.modified-packages }}
          build-depends-repos: dependency_${{ matrix.rosdistro }}.repos

      - name: Test
        id: test
        if: ${{ steps.get-modified-packages.outputs.modified-packages != '' }}
        uses: autowarefoundation/autoware-github-actions/colcon-test@v1
        with:
          rosdistro: ${{ matrix.rosdistro }}
          target-packages: ${{ steps.get-modified-packages.outputs.modified-packages }}
          build-depends-repos: dependency_${{ matrix.rosdistro }}.repos
