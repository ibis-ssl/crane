name: build test

on:
  workflow_dispatch:
  pull_request:
    paths:
      - .github/workflows/build_test.yaml
      - "**/**.cpp"
      - "**/**.h"
      - "**/**.hpp"
      - "**/CMakeLists.txt"
      - "**/package.xml"
      - .pre-commit-config.yaml
  merge_group:

jobs:
  job:
    name: BuildAndRun
    runs-on: ubuntu-22.04
    timeout-minutes: 180
    container: ros:${{ matrix.rosdistro }}
    env:
      DEBIAN_FRONTEND: noninteractive
    strategy:
      fail-fast: false
      matrix:
        rosdistro: [humble, jazzy]
    steps:
      - name: suppress warnings
        run: |
          git config --global --add safe.directory '*'

      - name: Install orocos libraries
        run: |
          apt-get update
          apt-get install -y wget ccache
          wget https://launchpad.net/ubuntu/+archive/primary/+files/liborocos-bfl0.8_0.8.0-6_amd64.deb
          wget https://launchpad.net/ubuntu/+archive/primary/+files/liborocos-bfl-dev_0.8.0-6_amd64.deb
          apt-get install -y ./liborocos-bfl0.8_0.8.0-6_amd64.deb
          apt-get install -y ./liborocos-bfl-dev_0.8.0-6_amd64.deb

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Copy repository
        run: |
          mkdir -p ~/ibis_ws/src/crane
          cp -rf . ~/ibis_ws/src/crane
        shell: bash

      - name: Install dependencies
        run: |
          cd ~/ibis_ws
          vcs import src < src/crane/dependency_${{ matrix.rosdistro }}.repos

      - name: Restore cache for /opt/ros/$ROS_DISTRO
        uses: actions/cache/restore@v3
        with:
          path: /opt/ros/
          key: ${{ runner.os }}-ros-${{ matrix.rosdistro }}

      - name: Resolve rosdep
        run: |
          cd ~/ibis_ws
          apt-get update
          apt install -y python3-pip
          rosdep update --include-eol-distros
          rosdep install -iy --from-paths src --rosdistro ${{ matrix.rosdistro }} --dependency-types=build --dependency-types=buildtool --dependency-types=test
        shell: bash

      - name: Caching /opt/ros/$ROS_DISTRO
        uses: actions/cache/save@v3
        with:
          path: /opt/ros/
          key: ${{ runner.os }}-ros-${{ matrix.rosdistro }}

      - name: Setup Problem Matchers for GCC
        run: echo "::add-matcher::${{ github.workspace }}/.github/matchers/gcc.json"

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2.11
        with:
          key: ccache-${{ runner.os }}-ros-${{ matrix.rosdistro }}

      - name: Build packages
        run: |
          source /opt/ros/${{ matrix.rosdistro }}/setup.bash
          cd ~/ibis_ws
          colcon build --symlink-install --cmake-args -DCMAKE_BUILD_TYPE=Release -Wno-array-bounds -D CMAKE_C_COMPILER_LAUNCHER=ccache -D CMAKE_CXX_COMPILER_LAUNCHER=ccache'
        shell: bash

      - name: Colcon test
        run: |
          source /opt/ros/${{ matrix.rosdistro }}/setup.bash
          cd ~/ibis_ws
          colcon test
        shell: bash

      - name: Setup Problem Matchers for clang-format
        run: echo "::add-matcher::${{ github.workspace }}/.github/matchers/clang-format.json"

      - name: Show test result
        if: always()
        run: |
          source /opt/ros/${{ matrix.rosdistro }}/setup.bash
          cd ~/ibis_ws
          colcon test-result --verbose
        shell: bash
